openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'RADview Domain Servers'
  description: 'Domain Servers.'
  
servers:
  - url: '{protocol}://{host}:{port}/{environment}'
    description: "RADview NBI Hub Server. For example: https://localhost:8282/mng164"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
        description: RADview server IP Address or host name.
      port:
        default: '8282'
        description: RADview server port number.
      environment:
        default: mng164/servers
        
paths:
  /domain-servers:
    parameters:
    - $ref: "#/components/parameters/auth"
    get:
      summary: Get all domains
      operationId: getDomain
      description: Get all domains.
      tags:
        - Domain Servers
      parameters:
        - $ref: "#/components/parameters/query"
      responses:
        200:
          description: All domains returned successfully.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Domain'
        400:
          $ref: '#/components/responses/BadRequestErrorResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        401:
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        500:
          $ref: '#/components/responses/ServerResourceErrorResponse'
    post:
      summary: Create new Domain server
      operationId: createDomain
      description: creating new Domain server
      tags:
        - Domain Servers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        200:
          $ref: '#/components/responses/DomainResponse'
        400:
          $ref: '#/components/responses/BadRequestErrorResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        401:
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        500:
          $ref: '#/components/responses/ServerResourceErrorResponse'
    patch:
      summary: Update Domain 
      operationId: updateDomain
      description: Update specific domain.
      tags:
        - Domain Servers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        200:
          $ref: '#/components/responses/DomainResponse'
        400:
          $ref: '#/components/responses/BadRequestErrorResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        401:
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        500:
          $ref: '#/components/responses/ServerResourceErrorResponse'

  /domain-servers:/{id}:
    parameters:
      - $ref: "#/components/parameters/auth"
      - $ref: "#/components/parameters/id"
    get:
      summary: Get domain by id
      operationId: getDomainById
      description: Get specific domain.
      tags:
        - Domain
      responses:
        200:
          description: Domain returned successfully.
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/Domain'
        400:
          $ref: '#/components/responses/BadRequestErrorResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        401:
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        500:
          $ref: '#/components/responses/ServerResourceErrorResponse'
    delete:
      summary: Delete domain by id
      operationId: deleteDomainById
      description: Delete specific domain.
      tags:
        - Domain
      responses:
        200:
          description: Domain deleted successfully.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                    example: 1
        400:
          $ref: '#/components/responses/BadRequestErrorResponse'
        404:
          $ref: '#/components/responses/NotFoundErrorResponse'
        401:
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        500:
          $ref: '#/components/responses/ServerResourceErrorResponse'

components:
  schemas:
    Domain:
      description: Model containing domain info.
      type: object
      properties:
        id:
          description: Id of this domain
          type: string
          readOnly: true
          example: 1
        name:
          description: Name of this domain
          type: string
          example: DomainA 
        description:
          description: Description of this domain
          type: string
          example: RADview Server domain (TLV)
        hostName:
          description:  Domain Server host name
          type: string
          example: DNA-D-HPG2-W10
        ipAddress:
          description:  Domain Server IP Address
          type: string
          example: 10.10.10.10
        port:
          description:  Domain Server http/s port
          type: string
          example: 8181
        parentGroupId:
          description:  Domain Server parent Group Id
          type: string
          example: 1
        operStatus:
          description: Operational status of this domain
          type: integer
          format: int32
          enum:
            - value: 1
              name: UP
              description: Domain is UP
            - value: 2
              name: DOWN
              description: Domain is DOWN
            - value: 255
              name: UNKNOWN
  parameters:
    auth:
      name: auth
      in: header
      required: true
      description: authentication 
      allowEmptyValue: false
      schema:
        type: string
      example: entlf31e7qlsmrhhq14s6h0h43
    id:
      name: id
      in: path
      required: true
      description: Numeric ID of the Domain.
      schema:
        type: string
      example: 1
    query:
      name: query
      in: query
      required: false
      description: Enable query on get response 
      schema:
        type: string
      example: ?name=domain1&operStatus=1
  
  responses:
    DomainResponse:
      description: Successfully create/update Domain. 
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: false
              successful:
                type: boolean
                readOnly: true
                example: true
              data:
                type: string
                readOnly: true
                example: "{data as json}"
    BadRequestErrorResponse:
      description: Bad Request. There was some error for this request.  
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: true
              successful:
                type: boolean
                readOnly: true
                example: false
              errorName:
                type: string
                readOnly: true
                example: java.lang.IllegalArgumentException
              code:
                type: integer
                format: int32
                readOnly: true
                example: 400
              errorMessage:
                type: string
                readOnly: true
                example: Missing/invalid field name.
    UnauthorizedErrorResponse:
      description: Unauthorized, Token is not valid or missing  
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: true
              successful:
                type: boolean
                readOnly: true
                example: false
              errorName:
                type: string
                readOnly: true
                example: java.lang.IllegalArgumentException
              code:
                type: integer
                format: int32
                readOnly: true
                example: 401
              errorMessage:
                type: string
                readOnly: true
                example: Unauthorized operation
    NotFoundErrorResponse:
      description: Resource not found for operation  
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: true
              successful:
                type: boolean
                readOnly: true
                example: false
              errorName:
                type: string
                readOnly: true
                example: java.lang.IllegalArgumentException
              code:
                type: integer
                format: int32
                readOnly: true
                example: 404
              errorMessage:
                type: string
                readOnly: true
                example: Resource not found
    ServerResourceErrorResponse:
      description: Server Resource operation error  
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: true
              successful:
                type: boolean
                readOnly: true
                example: false
              errorName:
                type: string
                readOnly: true
                example: java.lang.IllegalArgumentException
              code:
                type: integer
                format: int32
                readOnly: true
                example: 500
              errorMessage:
                type: string
                readOnly: true
                example: Resource operation error