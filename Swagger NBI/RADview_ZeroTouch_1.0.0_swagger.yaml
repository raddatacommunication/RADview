openapi: 3.0.0

servers:
  - url: '{protocol}://{host}:{port}/{environment}'
    description: "Web address for the RADview Northbound Interface (NBI). For example: https://127.0.0.1:3002/mng164/"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
        description: RADview server IP Address or host name.
      port:
        default: '3002'
        description: RADview server port number.
      environment:
        enum: 
          - mng164/zt/ne-rules
          - mng164/zt/targeted-configurations 
        default: mng164/zt/ne-rules

info:
  version: 1.0.0
  title: RADview Zero Touch
  description: RADview Zero Touch
  contact:
    name: RAD Data Communications Ltd.
    url: 'http://www.rad.com/71-2379/support/'
    email: support@rad.com

#############################################################################
# The security object specifies the security or authorization protocol 
# used when submitting requests.
############################################################################# 
security:
  - ApiKeyAuth: []
  
tags:
  - name: Targeted Configuration
    description: Everything about Targeted Configuration. All CRUD actions for Targeted Configuration are supported here.
  - name: NE-specific provisioning rule
    description: Everything about NE-specific provisioning rule. All CRUD actions for ZT rules are supported here.
    
paths:
  /targeted-configurations:
    parameters:
    - $ref: "#/components/parameters/auth"
    post:
      tags:
        - Targeted Configuration
      operationId: addTargetParameterType
      summary: Create Targeted Parameter
      description: Create Targeted Parameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZtTargetParamType'
        description: The Targeted Parameter to create
        required: true      
      responses:
        200:
          description: OK - Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

    get:
      tags:
        - Targeted Configuration
      operationId: getAllTargetParametersTypes
      summary: Get all Target Parameters Types
      description: Get all Target Parameters Types
      parameters:
        - $ref: "#/components/parameters/query"      
      responses:
        200:
          description: All Target Parameters Types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
  '/targeted-configurations/{targetParameterTypeId}':
    parameters:
    - $ref: "#/components/parameters/auth"
    get:
      tags:
        - Targeted Configuration
      operationId: getTargetParameterType
      summary: 'Get a Targeted Parameter identified by {targetParameterTypeId}'
      description: 'Returns a Targeted Parameter identified by {targetParameterTypeId}'
      parameters:
        - name: targetParameterTypeId
          in: path
          required: true
          description: The Targeted Parameter ID
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A Targeted Parameter with all its attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZtTargetParamType'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
    delete:
      tags:
        - Targeted Configuration
      operationId: removeTargetParameterType
      summary: removeTargetParameterType
      description: removeTargetParameterType
      parameters:
        - name: targetParameterTypeId
          in: path
          required: true
          description: Targeted Parameter ID
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK - Request was successful
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

  /ne-rules:
    parameters:
    - $ref: "#/components/parameters/auth"
    post:
      tags:
        - NE-specific provisioning rule
      operationId: addNeZtRule
      summary: Create NE-specific ZT provisioning rule
      description: Create NE-specific ZT provisioning rule
      responses:
        200:
          description: OK - Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZeroTouchNeRule'
        description: The NE-specific ZT provisioning rule to create
    get:
      tags:
        - NE-specific provisioning rule
      operationId: getAllNeZtRules
      summary: Get all NE-specific ZT provisioning rules
      description: Get all NE-specific ZT provisioning rules
      parameters:
        - $ref: "#/components/parameters/query"      
      responses:
        200:
          description: OK - Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZeroTouchNeRule'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
  '/ne-rules/{ztRuleId}':
    parameters:
    - $ref: "#/components/parameters/auth"
    get:
      tags:
        - NE-specific provisioning rule
      operationId: getNeZtRule
      summary: 'Get a NE-specific ZT provisioning rule identified by {ztRuleId}'
      description: 'Returns a NE-specific ZT provisioning rule identified by {ztRuleId}'
      parameters:
        - name: ztRuleId
          in: path
          required: true
          description: The ZT rule ID
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A NE-specific ZT provisioning rule with all its parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        202:
          description: >-
            Accepted - The request has been accepted for processing, but the
            processing has not been completed for asynchronous operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
    patch:
      tags:
        - NE-specific provisioning rule
      operationId: updateNeZtRule
      summary: >-
        Modify an existing NE-specific ZT provisioning rule identified by
        {ztRuleId} ZT rule attribute(s) identified by {ztRuleId}
      description: >-
        Update an existing NE-specific ZT provisioning rule attribute(s)
        identified by {ztRuleId}
      parameters:
        - name: ztRuleId
          in: path
          required: true
          description: The ZT rule ID
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK - Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZeroTouchNeRule'
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZeroTouchNeRule'
        description: NE-specific ZT provisioning rule
        required: true
    delete:
      tags:
        - NE-specific provisioning rule
      operationId: removeNeZtRule
      summary: >-
        Delete an existing NE-specific ZT provisioning rule identified by
        {ztRuleId}
      description: >-
        Delete an existing NE-specific ZT provisioning rule identified by
        {ztRuleId}
      parameters:
        - name: ztRuleId
          in: path
          required: true
          description: The ZT rule ID
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK - Request was successful
        400:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse"
        401:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse"
        403:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse"
        404:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse"
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
components:
  parameters:
    auth:
      name: auth
      in: header
      required: true
      description: authentication 
      allowEmptyValue: false
      schema:
        type: string
      example: 'entlf31e7qlsmrhhq14s6h0h43'
    query:
      name: query
      in: query
      required: false
      description: Enable query on get response 
      schema:
        type: string
      example: ?ztRuleName=rule_1&ztRuleCpeUid=aabbccddeeff      

  schemas:
    ZeroTouchNeRule:
      required:
        - ztRuleCpeUid
        - ztRuleNerNodeName
      properties:
        id:
          type: integer
          format: int32
          description: The ZT rule ID
        ztRuleType:
          type: string
          description: The ZT rule type
          enum:
            - Mass
            - Sub
          default: Sub
        ztRuleName:
          type: string
          description: The ZT rule name
        ztRuleDescr:
          type: string
          description: The ZT rule description
        ztRuleEnabled:
          type: boolean
          description: The ZT state
          default: true
          example: true
        ztRuleDeviceType:
          type: string
          description: 'The device type, related to a product family'
          example: pCPE-260ES
        ztRuleCpeUid:
          type: string
          description: A unique identifier of the NE (DUID)
          pattern: '^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$'
        ztRuleSubnetArray:
          type: array
          items:
            $ref: '#/components/schemas/ztRuleSubnet'
        ztRuleLocation:
          type: string
          description: The expected location for the particular deployed NE
        ztRuleBootstrappingMethod:
          type: string
          description: >-
            Determines whether a device-specific artifact and SW shall be
            generated and uploaded to the bootstrap server (Public)
          enum:
            - Public
            - VPN
          default: Public
        ztRuleNerArea:
          type: string
          description: Area name
        ztRuleNerNodeName:
          type: string
        ztRuleNeSwImageName:
          type: string
          description: >-
            A textual pointer to 'first time SW upload' Network Element SW image
            stored in RV database
        ztRuleVcpeosModuleSwImageName:
          type: string
          description: >-
            A textual pointer to a Network Element vCPEOS-Module image stored in
            RV database
        ztRuleConfigurationTemplateName:
          type: string
          description: >-
            A textual pointer to a configuration template file stored in RV
            database
        ztRuleCliScriptName:
          type: string
          description: A textual pointer to a predefined CLI script stored in RV database
        ztTargetParametersArray:
          type: array
          description: Targeted Parameters values
          items:
            $ref: '#/components/schemas/targetparametersvalues'
        ztRuleSnmpPort:
          type: integer
          format: int32
          default: 161
          example: 161
        ztRuleHttpPort:
          type: integer
          format: int32
          default: 80
          example: 80
        ztRuleTelnetPort:
          type: integer
          format: int32
          default: 23
          example: 23
        ztRuleSshPort:
          type: integer
          format: int32
          default: 22
          example: 22
        ztSnmpVersion:
          type: integer
          format: int32
          description: The SNMP version to be used for managing the NE
          enum:
          - value: 1
            name: SNMPv1
          - value: 3
            name: SNMPv3
          default: 3
          example: 3
        ztSnmpTimeout:
          type: integer
          format: int32
          description: The SNMP timeout (in milli seconds)
          default: 800
          example: 800
        ztSnmpRetries:
          type: integer
          format: int32
          description: The SNMP number of retries
          default: 1
          example: 1
        ztSnmpV1ReadCommunity:
          type: string
          description: The SNMPv1 read request community
          example: public
        ztSnmpV1WriteCommunity:
          type: string
          description: The SNMPv1 write request community
          example: private
        ztSnmpV3UserName:
          type: string
          description: The SNMPv3 user
          default: initial
          example: initial
        ztSnmpV3AuthenticationProtocol:
          type: string
          description: The SNMPv3 authentication protocol to use
          enum:
            - No Auth.
            - MD5
            - SHA
          default: No Auth.
          example: No Auth.
        ztSnmpV3AuthenticationPassword:
          type: string
          description: The SNMPv3 authentication password
        ztSnmpV3PrivacyProtocol:
          type: string
          description: The SNMPv3 privacy (encryption) protocol to use
          enum:
            - No Priv.
            - DES
            - AES128
          default: No Priv.
          example: No Priv.
        ztSnmpV3PrivacyPassword:
          type: string
          description: The SNMPv3 privacy (encryption) password
        ztCliSshUserName:
          type: string
          description: The username for script authentication
          default: su
          example: su
        ztCliSshPassword:
          type: string
          description: The password for script authentication
          default: 1234
          example: 1234
    ZtTargetParamType:
          required:
            - name
          properties:
            id:
              type: integer
              format: int32
              description: The Targeted Parameter ID
            name:
              type: string
              description: The Targeted Parameter name
              example: DHCP server IP
            type:
              type: string
              description: The Targeted Parameter type
              enum:
              - String
              - Number
              - IP Address
              - IP Address and Mask
              default: String
              example: IP Address
    ztRuleSubnet:
      type: object
      properties:
        ip:
          type: string
          description: IP subnet criterion
      required:
        - ip
    targetparametersvalues:
      type: object
      properties:
        name:
          type: string
          description: Target parameter name
        value:
          type: string
          description: Target parameter value
      required:
        - name
        - value
        
  #------------------------------------ #
  #       Security Schema (copied)      #
  #------------------------------------ #
  securitySchemes:
    ApiKeyAuth:
      type: apiKey 
      
      description: >-
        **Authentication key**. *Example: augtt$93eee2ddsad34jjk*. Every request
        that your application sends to the RADview API, it needs to identify your application.   
        
      #The name of the header value submitted in the request. Used only for apiKey type security
      name: auth 
      
      # Options are query, header or cookie. Used only for apiKey type security.
      in: header