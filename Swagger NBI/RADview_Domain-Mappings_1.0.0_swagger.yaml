openapi: 3.0.0

servers:
  - url: '{protocol}://{host}:{port}/{environment}'
    description: "Web address for the RADview Northbound Interface (NBI). For example: https://127.0.0.1:3300/mng164/"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
        description: RADview server IP Address or host name.
      port:
        default: '3300'
        description: RADview server port number.
      environment:
        enum: 
          - mng164/auth  # RADview Production Server 
        default: mng164/servers
        
info:
  version: "1.0.0"
  title: RADview Domain-Mappings

  description: |
    This is Domain-Mappings NBI. 
  contact:
    name: RAD Data Communications Ltd.
    url: 'http://www.rad.com/71-2379/support/'
    email: support@rad.com
    
#############################################################################
# The security object specifies the security or authorization protocol 
# used when submitting requests.
############################################################################# 
security:
  - ApiKeyAuth: []
  
tags:
  - name: Domain Mappings
    description: All CRUD actions for Domain Mappings are supported here.

paths: 
  /domain-mappings:
    parameters:
    - $ref: "#/components/parameters/auth"

    post:
      summary: Create a new Domain Mapping
      operationId: createDomainMapping
      description: creating Domain Mapping
      tags:
        - Domain Mappings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      responses:
        200:
          $ref: '#/components/responses/DomainMappingResponse'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        403:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

    get:
      summary: Get all Domain Mappings
      operationId: getDomainMappings
      description: Get all Domain Mappings.
      tags:
        - Domain Mappings
      parameters:
        - $ref: "#/components/parameters/query"
      responses:
        200:
          description: All Domain Mappings returned successfully.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DomainMapping'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        403:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"


  /domain-mappings/{id}:
    parameters:
      - $ref: "#/components/parameters/auth"
      - $ref: "#/components/parameters/id"

    get:
      summary: Get Domain Mapping by id
      operationId: getDomainMappingById
      description: Get specific Domain Mapping.
      tags:
        - Domain Mappings
      responses:
        200:
          description: Domain Mapping returned successfully.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                    example: 1
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        403:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

    patch:
      summary: Update Domain Mapping
      operationId: updateDomainMapping
      description: Update specific Domain Mapping.
      tags:
        - Domain Mappings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      responses:
        200:
          $ref: '#/components/responses/DomainMappingResponse'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        403:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

    delete:
      summary: Delete Domain Mapping by id
      operationId: deleteDomainMappingById
      description: Delete specific Domain Mapping.
      tags:
        - Domain Mappings
      responses:
        200:
          description: Domain Mapping deleted successfully.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  id:
                    type: string
                    readOnly: true
                    example: 1
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        403:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ForbiddenErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

components:
  schemas:
    DomainMapping:
      description: Model containing Domain Mapping info.
      type: object
      properties:
        id:
          description: Id of this Domain Mapping
          type: string
          readOnly: true
          example: b7e1862d-34bb-4aee-bd99-15310e3d0723
        circleId:
          description: Id of Circle
          type: string
          example: 172
        domainServerId:
          description: Id of Domain Server
          type: string
          readOnly: true
          example: 207
        duid:
          description: Device UID
          type: string
          example: AA-00-04-00-FF-4B 
        neId:
          description: Mapping network element id
          type: number
          readOnly: true
          example: 1000005
        mappingStatus:
          description: Mapping status of this Domain Mapping
          type: integer
          readOnly: true
          format: int32
          example: 3
          enum:
            - value: 1
              name: AVILABLE
              description: Default status for Domain Mapping (not deployed).
            - value: 2
              name: BOOTSTRAP_READY
              description: ZT ne-rule exist but network element still not deployed
            - value: 3
              name: MANAGED
              description: Network element deployed for this UID mapping
            - value: 255
              name: UNKNOWN
        
  parameters:
    auth:
      name: auth
      in: header
      required: true
      description: authentication 
      allowEmptyValue: false
      schema:
        type: string
      example: entlf31e7qlsmrhhq14s6h0h43
    id:
      name: id
      in: path
      required: true
      description: ID of the Domain Mapping.
      schema:
        type: string
      example: 1
    query:
      name: query
      in: query
      required: false
      description: Enable query on get response 
      schema:
        type: string
      example: ?circleId=188&uuid=AA-00-04-00-FF-4B
  
  responses:
    DomainMappingResponse:
      description: Successfully create/update Domain Mapping. 
      content:
        application/json:    
          schema:
            type: object
            properties:
              error:
                type: boolean
                readOnly: true
                example: false
              successful:
                type: boolean
                readOnly: true
                example: true
              data:
                type: string
                readOnly: true
                example: "{data as json}"
                
  #------------------------------------ #
  #       Security Schema               #
  #------------------------------------ #
  securitySchemes:
    ApiKeyAuth:
      type: apiKey 
      
      description: >-
        **Authentication key**. *Example: augtt$93eee2ddsad34jjk*. Every request
        that your application sends to the RADview API, it needs to identify your application.   
        
      #The name of the header value submitted in the request. Used only for apiKey type security
      name: auth 
      
      # Options are query, header or cookie. Used only for apiKey type security.
      in: header