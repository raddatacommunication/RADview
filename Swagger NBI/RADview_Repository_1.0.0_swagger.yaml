openapi: 3.0.0

servers:
  - url: '{protocol}://{host}:{port}/{environment}'
    description: "Web address for the RADview Northbound Interface (NBI). For example: https://127.0.0.1:3002/mng164/"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
        description: RADview server IP Address or host name.
      port:
        default: '3002'
        description: RADview server port number.
      environment:
        enum: 
          - mng164/repository
        default: mng164/repository

info:
  version: 1.0.0
  title: RADview Repository
  description: "The file system repository allows you to upoad a file to the server repository and also receive information about files in repository like name, size, content. Note that file content is Base64 encoded. The file system repository allows access to files which have been uploaded into the server."
  contact:
    name: RAD Data Communications Ltd.
    url: 'http://www.rad.com/71-2379/support/'
    email: support@rad.com
  
#############################################################################
# The security object specifies the security or authorization protocol 
# used when submitting requests.
############################################################################# 
security:
  - ApiKeyAuth: []
  
tags:
  - name: Upload and Download Files 
    description: Upload and download files. 
  - name: Files Repository
    description: Everything about files. All CRUD actions for files are supported here.

paths:
  /upload:
    post:
      tags:
        - Upload and Download Files 
      summary: Upload a file
      operationId: uploadFile
      description: API for file upload
      parameters:
        - $ref: "#/components/parameters/auth"
      requestBody:
        description: The request body is in multipart HTTP format. The request payload comprises of two parts. The first part describes the file to upload, and second part contains original file name and file data. The content type of this part should be set in accordance with the file type.
        content: 
          multipart/form-data: # the expected content is multipart/form-data HTTP request
            schema: # request payload
              type: object
              properties: # request parts
                descriptor: # the file desciption part
                  description: The descriptor of the file to be uploaded
                  type: object
                  properties:
                    fileType:
                      $ref: "https://api.swaggerhub.com/domains/RADview/Common-Enums/1.0.0#/definitions/FileTypeEnum"
                    fileDescription:
                      description: The description of the file
                      type: string
                      example: "SW file for device, version 6.2.6"
                    neTypeIds:
                      $ref: '#/components/schemas/neTypeIdsList'
                upload: # The file data part
                    type: string
                    format: binary
            encoding:
              descriptor:
                contentType: application/json
              upload:
                contentType: type/subtype
      responses:
        202:
          $ref: '#/components/schemas/fileDescriptor'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

  /download/{fileId}:
    get:
      tags:
        - Upload and Download Files 
      summary: Download file with given ID
      operationId: downloadFile
      description: this API is for file download
      parameters:
        - $ref: "#/components/parameters/auth"
        - $ref: '#/components/parameters/fileId'
      responses:
        200:
          description: Operation performed successfully.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
            text/html:
              schema:
                type: string
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
          
  /files:
    get:
      tags:
        - Files Repository
      summary: Returns list of file descriptors
      operationId: getFileInfo
      description: this API is to list files
      parameters:
        - $ref: '#/components/parameters/auth'
        - $ref: '#/components/parameters/query'
      responses:
        200:
          description: OK
          content:
            appliaction/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileDescriptor'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
    
          
  /files/{fileId}:
    patch:
      tags:
        - Files Repository
      summary: update file
      operationId: updateFile
      description: this API is for file update
      parameters:
        - $ref: "#/components/parameters/auth"
        - $ref: '#/components/parameters/fileId'
      requestBody:
        description: The request body is in multipart HTTP format. The request payload comprises of two parts. The first part describes the file to upload, and second part contains original file name and file data. The content type of this part should be set in accordance with the file type.
        content: 
          multipart/form-data: # the expected content is multipart/form-data HTTP request
            schema: # request payload
              type: object
              properties: # request parts
                descriptor: # the file desciption part
                  description: The descriptor of the file to be uploaded
                  properties:
                    fileType:
                      $ref: "https://api.swaggerhub.com/domains/RADview/Common-Enums/1.0.0#/definitions/FileTypeEnum"
                    fileDescription:
                      description: The description of the file
                      type: string
                    neTypeIds:
                      $ref: '#/components/schemas/neTypeIdsList'
                upload: # The file data part
                    type: string
                    format: binary
            encoding:
              descriptor:
                contentType: application/json
              upload:
                contentType: type/subtype
      responses:
        202:
          description: Operation accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDescriptor'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"

    delete:
      tags:
        - Files Repository
      summary: delete file with given file ID
      operationId: deleteFile
      description: this API is for file deletion
      parameters:
        - $ref: "#/components/parameters/auth"
        - $ref: '#/components/parameters/fileId'
      responses:
        202:
          description: Operation accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDescriptor'
        400:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/BadRequestErrorResponse'
        401:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/UnauthorizedErrorResponse'
        404:
          $ref: 'https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/NotFoundErrorResponse'
        500:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Responses/1.0.0#/responses/ServerResourceErrorResponse"
      
components:
  
  schemas:
    neTypeIdsList:
      description: the list of IDs of associated NE types
      type: array
      items:
        type: integer
        format: int32

    fileDescriptor:
      type: object
      properties:
        id:
          description: the UID of the file
          type: string
          example: 3005568778
        fileName:
          description: the original name of the file
          type: string
          example: sw_image_v502.bin
        fileDescription:
          description: the description of the file
          type: string
          example: SW file for device, version 5.0.2
        fileType:
          $ref: "https://api.swaggerhub.com/domains/RADview/Common-Enums/1.0.0#/definitions/FileTypeEnum"
          example: 27
        fileSize:
          description : the file size in bytes
          type: integer
          format: int64
          example: 204800
        createdAt:
          description: date and time of the file creation (uploading)
          type: string
          format: date-time
          example: 
        modifiedAt:
          description: date and time of the last file modification
          type: string
          format: date-time
          example: 
        filePath:
          description: the fully quilified path on server
          type: string
          example: "/repository/sw/sw_image_v502.bin"
        neTypeIds:
          $ref: '#/components/schemas/neTypeIdsList'
          example: [300]
        domainFileDescriptorList:
          description: List of all fileDescriptor in the domains.
          type: array
          items:
            type: object
            properties:
              domainId:
                description: The id of the domain that this fileDescriptor created.
                type: string
                readOnly: true
                example: 1
              resourceId:
                description: The id of this fileDescriptor.
                type: string
                readOnly: true
                example: 20011842
              status:
                $ref: "https://api.swaggerhub.com/domains/RADview/Common-Enums/1.0.0#/definitions/ExecutorServiceWorkerStatusEnum"
              errorHRef:
                description: error reference.
                type: string
                readOnly: true

  parameters:
    auth:
      name: auth
      in: header
      required: true
      description: authentication 
      allowEmptyValue: false
      schema:
        type: string
      example: 'entlf31e7qlsmrhhq14s6h0h43'
    query:
      name: query
      in: query
      required: false
      description: Enable query on get response 
      schema:
        type: string
      example: ?fileSize>2048&fileType=5      
    fileId:
      in: path 
      name: fileId
      schema:
        type: string
      required: true
      description: the file ID

  #------------------------------------ #
  #       Security Schema               #
  #------------------------------------ #
  securitySchemes:
    ApiKeyAuth:
      type: apiKey 
      
      description: >-
        **Authentication key**. *Example: augtt$93eee2ddsad34jjk*. Every request
        that your application sends to the RADview API, it needs to identify your application.  
        
      #The name of the header value submitted in the request. Used only for apiKey type security
      name: auth 
      
      # Options are query, header or cookie. Used only for apiKey type security.
      in: header